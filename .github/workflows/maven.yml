# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      # 第一步：下载源码
      - name: Checkout
      - uses: actions/checkout@v3

      # 第二步：打包构建
      - name: Build
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - run: mvn -B package --file pom.xml
      - run: mkdir staging && cp target/*full.jar staging

      # 第三步：发布 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
        with:
          tag_name: ${{ github.ref }} # (tag)标签名称
          release_name: Release ${{ github.ref }}
          draft: false # 是否是草稿
          prerelease: true # 是否是预发布
      # 第四步： 设置 jobs Maven pom 版本环境变量
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Build & test"
        run: |
          echo "done!"

      # 第五步：上传构建结果到 Release
      - name: Upload Release Asset
        id: upload-release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.TOKEN }}
          automatic_release_tag: ${{ env.RELEASE_VERSION }}
          prerelease: false
          title: Release ${{ env.RELEASE_VERSION }}
          files: |
            staging/*.jar
